{% if PESSOA.CODPESSOA %}
    {% set pessoaObj = getDaos('PessoaDao', 'buscarPessoa', [PESSOA.CODPESSOA])|first %}
{% endif %}

{% block top %}{% endblock %}
<input type="hidden" name="CODPESSOA" id="codpessoa" value='{{ pessoaObj.CODPESSOA }}'>

<div class="row">
    <div class="form-group col-12 col-md-12 float-left">
        <label class="form-label">Nome</label>
        <input name="NOME" id="nome" type="text" class="form-control" required placeholder="Nome Completo"
               value="{{ pessoaObj.NOME }}"/>
        <div class="invalid-feedback">
            Preencha o campo corretamente
        </div>
    </div>

</div>

{% block divInfoAdicional %}{% endblock %}

<div class="row">
    <div class="section-title">CONTATO</div>
    <div class="form-group  col-12 col-md-6  float-left">
        <label class="form-label">Email</label>
        <input name="EMAIL" id="email" type="email" class="form-control" placeholder="nome@exemplo.com" required
               autocomplete="email" value="{{ pessoaObj.EMAIL }}"/>
        <div class="invalid-feedback">
            Preencha o campo corretamente
        </div>
    </div>

    <div class="form-group col-12 col-md-6 float-left">
        <label class="form-label">Telefone</label>
        <input name="TELEFONE" id="telefone" type="text" class="form-control"
               placeholder="(00) 12345-2323"
               minlength="14" maxlength="15" onkeyup="mascara(this,mcel)" pattern="\([0-9]{2}\) [0-9]{4,5}-[0-9]{4}$"
               required
               autocomplete="nope" value="{{ pessoaObj.TELEFONE }}"/>
        <div class="invalid-feedback">
            Preencha o campo corretamente
        </div>
    </div>
</div>

{% block bottom %}{% endblock %}

<script>
    /*$(function () { // jQuery ready
        // On blur validation listener for form elements
        $('.needs-validation').find('input,select,textarea').on('focusout', function () {
            // check element validity and change class
            $(this).removeClass('is-valid is-invalid')
                    .addClass(this.checkValidity() ? 'is-valid' : 'is-invalid');
        });
    });*/

    async function checkDocumento() {
        let cpfInput = document.getElementById("cpf");
        let cnpjInput = document.getElementById("cnpj");
        let doc = '';

        if (cpfInput && cpfInput.offsetParent !== null) {
            console.log("CPF")
            doc = cpfInput.value.replace(/\D/g, '');
            if (doc.length !== 11 || !validaCPF(doc)) {
                alertError('CPF inválido!');
                return false;
            }
            return true
        } else if (cnpjInput && cnpjInput.offsetParent !== null) {
            doc = cnpjInput.value.replace(/\D/g, '');
            console.log(doc)
            if (doc.length !== 14 || !validaCNPJ(doc)) {
                alertError('CNPJ inválido!');
                return false;
            }
            return true
        } else {
            alertError('Campo de CPF ou CNPJ não encontrado.');
            return false;
        }

        return false;
    }
</script>
