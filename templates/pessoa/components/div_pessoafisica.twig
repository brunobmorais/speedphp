{% if PESSOA.CODPESSOA %}
    {% set pessoafisicaObj = getDaos('PessoaFisicaDao', 'buscarPessoa', [PESSOA.CODPESSOA])|first %}
{% endif %}

{% block top %}{% endblock %}
<div class="row">
    <input type="hidden" name="TIPOPESSOA" value='F'>

    <div class="form-group col-12 col-md-4 float-left">
        <label class="form-label">CPF</label>
        <input name="CPF" id="cpf" type="text" class="form-control"
               onkeyup="buscaPessoaFisicaCPF()"
               placeholder="000.000.000-00"
               required
               onkeydown="mascara(this,mcpf)" minlength='14' maxlength="14"
               value="{{ pessoafisicaObj ? getLibs('FuncoesLib', 'formatCpfUsuario', [pessoafisicaObj.CPF]) : '' }}"/>
        <div class="invalid-feedback">
            Preencha o campo corretamente
        </div>
    </div>

    <div class="form-group col-12 col-md-4 float-left">
        <label class="form-label">Data de Nascimento</label>
        <input name="DATANASCIMENTO" id="datanascimento" type="text" class="form-control" required placeholder="01/01/2000"
               value="{{ pessoafisicaObj ? pessoafisicaObj.DATANASCIMENTO|date('d/m/Y') : '' }}" minlength="10" maxlength="10" onkeyup="mascara(this,mdata)"/>
        <div class="invalid-feedback">
            Preencha o campo corretamente
        </div>
    </div>
    <div class="form-group col-12 col-md-4 float-left">
        <label class="form-label">Sexo</label>
        <select name="SEXO" id="sexo" class="form-control form-select" required>
            {% set sexos = { 'M' : 'Masculino', 'F' : 'Feminino', 'N' :  'Não Informado'} %}
            <option value="" disabled selected>Selecione uma opção</option>
            {% for chave, valor in sexos %}

                <option value="{{ chave }}" {{ chave == pessoafisicaObj.SEXO ? 'selected' : '' }}>
                    {{ valor }}</option>

            {% endfor %}

        </select>
        <div class="invalid-feedback">
            Preencha o campo corretamente
        </div>
    </div>
</div>

{% block bottom %}{% endblock %}

<script>
    function checkCPF() {
        let cpf = document.getElementById("cpf").value;
        if (!validaCPF(cpf)) {
            alertError('CPF inválido!');
            return false
        }
        return true

    }

    async function buscaPessoaFisicaCPF() {
        const cpf = removeCaracteres(document.getElementById("cpf").value);

        console.log(cpf);
        if (document.querySelector("#cpf").checkValidity() === true && cpf.length == 11) {

            if (!validaCPF(cpf)) {
                alertError("CPF inválido!");
                return;
            }

            await buscaPessoaFisicaLocalService(cpf).then((data) => {

                if (!data || data.error || (data.data).length == 0) {
                    return;
                }

                document.getElementById("sexo").value = data.data.SEXO;
                document.getElementById("datanascimento").value = data.data.DATANASCIMENTO;

                document.getElementById("nome").value = data.data.NOME;
                document.getElementById("telefone").value = mcel(data.data.TELEFONE);
                document.getElementById("email").value = data.data.EMAIL;

                document.getElementById("cep").value = data.data.CEP;
                document.getElementById("logradouro").value = data.data.LOGRADOURO;
                document.getElementById("numero").value = data.data.NUMERO;
                document.getElementById("bairro").value = data.data.BAIRRO;
                document.getElementById("estado").value = data.data.ESTADO;
                buscarMunicipio(data.data.NOMECIDADE);
                document.getElementById("complemento").value = data.data.COMPLEMENTO;

            });
        }
    }
</script>